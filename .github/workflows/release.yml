name: Release

on:
  push:
    tags:
      - "v*"

# Security: Set minimal permissions
permissions:
  contents: write  # Required for creating releases

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for changelog generation
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Install git-chglog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4

      - name: Generate Changelog
        run: |
          git-chglog -o CHANGELOG.md
          
      - name: Commit Changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Fetch and checkout main branch
          git fetch origin main
          git checkout main
          git reset --hard origin/main
          
          # Generate changelog again on main branch
          git-chglog -o CHANGELOG.md
          
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to CHANGELOG.md"
          else
            git commit -m "chore: update CHANGELOG.md for ${GITHUB_REF_NAME}"
            git push origin main
          fi
          
          # Go back to the tag for the rest of the workflow
          git checkout ${GITHUB_REF_NAME}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: v2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

      - name: Generate release tarball
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          tar czf "antidot-home-${VERSION}.tar.gz" --transform "s,^,antidot-home-${VERSION}/," --exclude dist ./*

      - name: Upload release tarball
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          files: antidot-home-*.tar.gz
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
